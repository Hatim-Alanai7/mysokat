 private void SelectFile_Click(object sender, EventArgs e)
        {
            try
            {
                openFileDialog1.ShowDialog();
               tbFilename.Text = openFileDialog1.FileName;
                progressBar1.Value = 0;
            }
            catch (Exception ex)
            {
                Interaction.MsgBox(ex.Message);
            }
        }



private void BeginSend_Click(object sender, EventArgs e)
        {
            Cursor = Cursors.WaitCursor;
            BeginSend.Enabled = false;
            try
            {
                progressBar1.Value = 0;

                if (Strings.Len(Strings.Trim(tbFilename.Text)) > 0 & Strings.Len(Strings.Trim(ip_TextBox1.Text)) > 0)
                {
                    nWait = 0;
                    RecivedAcceptTosend = false;
                    timer1.Start();

                    // modifle the legith of file
                    var fileData = File.ReadAllBytes(tbFilename.Text);

                    sizeofresivedaat1 = fileData.Length;
                    var filename = new FileInfo(tbFilename.Text);


                    massage_master_request = fileData.Length + "&%&%$#" + filename.Name;
                    SendMassageToOtherUser(massage_master_request);
                }

                else
                {
                    Interaction.MsgBox("select the File To Send It and ip ");
                }
            }
            catch (Exception ex)
            {
                Interaction.MsgBox(ex.Message, MsgBoxStyle.Critical);
            }
            BeginSend.Enabled = true;
            Cursor = Cursors.Default;
        }


عميل
static void Main(string[] args)
    {
        TcpClient tcpClient = new TcpClient("localHost", 5200);

        NetworkStream networkStream = tcpClient.GetStream();
        BufferedStream bs = new BufferedStream(networkStream);


        //Send data to listener
        byte[] dataToSend = new byte[100];
        new Random().NextBytes(dataToSend);
        for (int i = 0; i < 100; i++)
            networkStream.Write(dataToSend, 0, dataToSend.Length);

        //when the network stream is closed, it also shuts down the connection
        networkStream.Close();

        Console.WriteLine("Done");
        Console.ReadLine();
    }

الخادم
static void Main(string[] args)
    {
        IPAddress ip = IPAddress.Parse("127.0.0.1");
        TcpListener tcpListener = new TcpListener(ip, 5200);
        tcpListener.Start();

        Console.WriteLine("Waiting for a client to connect...");

        //blocks until a client connects
        Socket socketForClient = tcpListener.AcceptSocket();

        Console.WriteLine("Client connected");

        //Read data sent from client
        NetworkStream networkStream = new NetworkStream(socketForClient);
        int bytesReceived, totalReceived = 0;
        byte[] receivedData = new byte[1000];
        do
        {
            bytesReceived = networkStream.Read
                (receivedData, 0, receivedData.Length);
            totalReceived += bytesReceived;
        }
        while (bytesReceived != 0);
        Console.WriteLine("Total bytes read: " + totalReceived.ToString());

        socketForClient.Close();
        Console.WriteLine("Client disconnected...");

        Console.ReadLine();
    }